#/etc/nginx/nginx.conf

# Usuario utilizado pelo nginx
user www-data;

# A quantidade de worker deve ser baseada na quantidade de cores que a maquina tem.
# Configuracoes com numero maior que a quantidade de core nao vai trazer beneficios
# grep -c ^processor /proc/cpuinfo
worker_processes 4;

# numero de file descriptors usados pelo nginx
worker_rlimit_nofile 100000;

# Caminho para armazenar o pid do nginx
pid /run/nginx.pid;

# Define as configuracoes globais para todas as conexoes
events {

    # define a quantidade de clientes que vao ser atendidos por worker
    # max clients = worker_connections * worker_processes
    # max clients eh tambem definido pela quantidade de sockets disponiveis no sistema (~64k)
    worker_connections 1024;

    # Otimizacao para atender muitos clientes por thread
    use epoll;

    # Aceita a quantidade maxima de conexoes possivel. Pode gerar flood se a quantidade de workers for muito baixa
    multi_accept on;
}

http {

    # Configuracoes de LOG
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Configuracoes de cache para FDs, arquivos frequentementes acessados
    # pode aumentar a performace, pode ser necessaria a alteracao dos valores abaixo.
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Para melhorar a performace de discos mecanicos pode ser desabilitado o access log
    # access_log off;

    # Copia dados entre um FD para outro internamente no kernel
    # mais rapido que read() + write()
    sendfile on;

    # Envia os headers em um pedaco, eh melhor que enviar um a um
    tcp_nopush on;

    # Nao envia dados de buffer, bom para enviar pequenos dados em rajada
    tcp_nodelay on;

    # Reduz a quantidade de dados que eh necessario enviar via rede
    gzip on;

    # Configuracoes de Compressao
    # gzip_static on;
    gzip_min_length 10240;
    gzip_comp_level 1;
    gzip_vary on;
    gzip_disable msie6;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        # text/html is always compressed by HttpGzipModule
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Controle do tamanho maximo do arquivo para upload
    client_max_body_size 60m;

    # Tamanho do buffer para o body
    client_body_buffer_size 128k;

    # Habilitar o servidor fechar conexoes de clientes que nao estao respondendo para economizar memoria
    reset_timedout_connection on;

    # Define o tempo de timeout -- padrao 60
    client_body_timeout 10;

    # Se o cliente parar de responder, libera memoria -- padrao 60
    send_timeout 2;

    # O servidor vai fechar conexoes depois do tempo definido abaixo. -- padrao 75
    keepalive_timeout 65;

    # Define o tamanho maximo da table de tipos de hash
    types_hash_max_size 2048;

    # Numero de requisicoes que o cliente pode fazer durante o keep-alive -- para teste
    keepalive_requests 100000;

    # Esconde informacoes do servidor.
    server_tokens off;

    # Controle de timeout para processamento do php
    proxy_connect_timeout 1800s;
    proxy_send_timeout 1800s;
    proxy_read_timeout 1800s;
    fastcgi_send_timeout 1800s;
    fastcgi_read_timeout 1800s;

    # Corrige problema de upstream sent too big header
    fastcgi_buffers 128 4096k;
    fastcgi_buffer_size 4096k;

    # Configuracoes de SSL
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    # Configuracoes de Log
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Whitelist de ips que podem ultrapassar a quantidade de 2r/s
    geo $rt_filtered_ip {
        default        $binary_remote_addr;

        127.0.0.1      "";
        10.0.0.0/8     "";
        172.16.0.0/16  "";
        192.168.0.0/16 "";

        ::1            "";
        #2001:0db8::/32 "";
    }

    # Controle do numero de requisicoes 2/s
    limit_req_zone $rt_filtered_ip zone=one:10m rate=2r/s;
    limit_req_status 444;

    # Configuracoes adicionais de Virtual Host
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}

